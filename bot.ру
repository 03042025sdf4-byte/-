import json
import re
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import os

TOKEN = os.getenv("BOT_TOKEN")  # üîí —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
DATA_FILE = "data.json"

def load_data():
    try:
        with open(DATA_FILE, "r") as f:
            return json.load(f).get("total", 0)
    except FileNotFoundError:
        return 0

def save_data(total):
    with open(DATA_FILE, "w") as f:
        json.dump({"total": total}, f)

total = load_data()

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global total
    text = update.message.text.strip()
    lines = text.split("\n")

    added_numbers = []
    for line in lines:
        match = re.match(r"^([+-]?\d+)", line.strip())
        if match:
            num = int(match.group(1))
            total += num
            added_numbers.append(num)

    if added_numbers:
        save_data(total)
        added_str = ", ".join([f"{'+' if n > 0 else ''}{n}" for n in added_numbers])
        reply = f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {added_str}\nüí∞ –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞: {total}"
        await update.message.reply_text(reply)

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
